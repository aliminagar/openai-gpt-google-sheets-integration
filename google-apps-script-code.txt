üìÑ google-apps-script-code.txt


// Code.gs
function storeApiKeyAndConfig() {
  var apiKey = "YOUR_API_KEY"; // ‚Üê Replace this
  PropertiesService.getScriptProperties().setProperty(
    'OPENAI_API_KEY', apiKey
  );
  PropertiesService.getScriptProperties().setProperty(
    'OPENAI_API_ENDPOINT', 'https://api.openai.com/v1/completions'
  );
}

function getStoredValues() {
  var apiKey = PropertiesService.getScriptProperties().getProperty('OPENAI_API_KEY');
  var apiEndpoint = PropertiesService.getScriptProperties().getProperty('OPENAI_API_ENDPOINT');

  Logger.log('API Key: ' + apiKey);
  Logger.log('API Endpoint: ' + apiEndpoint);
}


// GPT.gs.gs
function callOpenAI(promptText) {
  const apiKey = PropertiesService.getScriptProperties().getProperty('OPENAI_API_KEY');
  const apiEndpoint = PropertiesService.getScriptProperties().getProperty('OPENAI_API_ENDPOINT');

  const payload = {
    model: "text-davinci-003",
    prompt: promptText,
    max_tokens: 100,
    temperature: 0.7
  };

  const options = {
    method: "post",
    contentType: "application/json",
    headers: {
      Authorization: `Bearer ${apiKey}`
    },
    payload: JSON.stringify(payload)
  };

  const response = UrlFetchApp.fetch(apiEndpoint, options);
  const json = JSON.parse(response.getContentText());
  return json.choices[0].text.trim();
}

// GPT_TRANSLATE.gs
function translateText(inputText, targetLanguage) {
  const prompt = `Translate the following text to ${targetLanguage}:\n${inputText}`;
  return callOpenAI(prompt);
}


// GPT_CLASSIFY.gs
function classifyText(inputText, categories) {
  const prompt = `Classify the following text into one of the categories: ${categories.join(", ")}\nText: ${inputText}`;
  return callOpenAI(prompt);
}



// GPT_EXTRACT.gs
function extractKeywords(inputText) {
  const prompt = `Extract key terms from the following text:\n${inputText}`;
  return callOpenAI(prompt);
}


// GPT_SUMMARIZE.gs
function summarizeText(inputText) {
  const prompt = `Summarize the following text:\n${inputText}`;
  return callOpenAI(prompt);
}


// GPT_FORMAT.gs
function formatTextNicely(inputText) {
  const prompt = `Reformat and clean up the following text for clarity and readability:\n${inputText}`;
  return callOpenAI(prompt);
}
